#!/bin/bash

DESCRIPTS=`dirname $0`

if [ -d /opt/cronus/ ] ; then
    echo "Please Delete directory /opt/cronus to proceed. Exiting"
    #exit 1
fi

echo "Creating directory /opt/cronus"

echo "Copying daemon processors to /opt/cronus/scripts"
if [ ! -d /opt/cronus/scripts ] ; then
    sudo mkdir -p /opt/cronus/scripts
fi

sudo cp -r job_processor /opt/cronus/scripts
sudo cp -r server_monitor /opt/cronus/scripts

echo "Copying required scripts to /opt/cronus/shell"
if [ ! -d /opt/cronus/shell ] ; then
    sudo mkdir -p /opt/cronus/shell
fi

cd ../shell
sudo cp -r * /opt/cronus/shell

echo "Copying command scripts to /opt/cronus/control"
if [ ! -d /opt/cronus/control ] ; then
    sudo mkdir -p /opt/cronus/control
fi

cd ../lib/
sudo cp -r TenantHandlers /opt/cronus/control

cd ../scripts

echo "Enter your domain (ex- thinkcube.net)"
read domain

# retreiving settings needed for LDAP
dc1=`echo $domain | awk -F ' ' '{print $1}'`
dc2=`echo $domain | awk -F ' ' '{print $2}'`

echo "Writing DNS file db.cronus to /etc/bind"

if [ ! -d /etc/bind ] ; then
    echo "No DNS server installed. Installing bind9"
    sudo apt-get -y --force-yes install bind9
fi

echo "Enter your ethernet interface"
read ethernet_interface
dns_ip=`ifconfig ${ethernet_interface} | grep -o 'inet addr[^ ]\+'| sed -e "s/[^0-9\.]//g"`

sudo cat dns.sample | sed -e "s/XXDOMAINXX/${domain}/g" | sed -e "s/XXDNSIPXX/${dns_ip}/g" > /etc/bind/db.cronus

echo "Adding db.cronus to default zones"

sudo cat zone.sample | sed -e "s/XXDOMAINXX/${domain}/g" >> /etc/bind/named.conf.default-zones

echo "Adding IDP DNS in db.cronus"

cd /opt/cronus/shell

sudo ./dns add idp ${dns_ip}

cd -

echo "Adding SSL Virtual Host for IDP at idp.${domain}. Make sure SSL is enabled at port 443"

sudo cat default-ssl.sample | sed -e "s/XXDOMAINXX/${domain}/g" >> /etc/apache2/sites-available/default-ssl
sudo a2ensite /etc/apache2/sites-available/default-ssl
sudo a2enmod ssl rewrite headers
sudo /etc/init.d/apache2 restart

echo "Installing databases"
cd ../data
echo "Enter mysql username"
read username
echo "Enter mysql password"
read password

mysql -u ${username} --password=${password} < cronus.sql 
mysql -u ${username} --password=${password} < UserStore.sql 

echo "Enter LDAP root username"
read ldapusername
echo "Enter LDAP root password"
read ldappassword

cd ..

cd /opt/cronus/control/TenantHandlers/shell

sudo cat settings > settings.tmp
sudo cat settings.tmp | sed -e "s/XXDBUSERXX/${username}/g" | sed -e "s/XXDBPASSXX/${password}/g"  | sed -e "s/XXDC1XX/${dc1}/g" | sed -e "s/XXDC2XX/${dc2}/g" | sed -e "s/XXLDAPUIDXX/${ldapusername}/g" | sed -e "s/XXLDAPPASSWDXX/${ldappassword}/g" > settings
sudo rm settings.tmp

cd -

echo "Replacing database settings in daemon processors and starting them"

cd /opt/cronus/scripts

sudo mv job_processor/config.py job_processor/config.py.tmp
sudo cat job_processor/config.py.tmp | sed -e "s/XXDBUSERXX/${username}/g" | sed -e "s/XXDBPASSXX/${password}/g" | sed -e "s/XXCNTRLIPXX/${dns_ip}/g" > job_processor/config.py
sudo rm job_processor/config.py.tmp
sudo python job_processor/daemon.py start

sudo mv server_monitor/config.py server_monitor/config.py.tmp
sudo cat server_monitor/config.py.tmp | sed -e "s/XXDBUSERXX/${username}/g" | sed -e "s/XXDBPASSXX/${password}/g" > server_monitor/config.py
sudo rm server_monitor/config.py.tmp
sudo python server_monitor/daemon.py start

cd -

echo "Installing Identity Provider to /var/idp"
cd lib
sudo cp -r idp /var

echo "Enter document root of your webserver"
read doc_root

echo "Copying REST api to ${doc_root}/api"
if [ ! -d /var/www/api ] ; then
    sudo mkdir ${doc_root}/api
fi

cd ../../
sudo cp -r api ${doc_root}

cd DNS-Controller/rest
sudo cp -r dns ${doc_root}/api/
sudo cp -r idp ${doc_root}/api/

cd ../scripts

echo "Adding proxy restart script"
sudo cp proxystart /etc/init.d
sudo update-rc.d proxystart defaults

echo "DNS-Controller succesfully installed. A sample certificate for IDP was added in /var/idp/cert/server.crt. Replace it with you own certificate in production environment"
