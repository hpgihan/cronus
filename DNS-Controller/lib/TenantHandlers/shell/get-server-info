#!/bin/bash

# usage get-server-info ip IPADRESS -cluster-id CLUSTERID
# import settings file
DESCRIPTS=`dirname $0`
source $DESCRIPTS/settings

function check_server_status()
{
    local ip=$1
    ping -c 3 $ip > /dev/null
    return $?
}

# parses arguments, checks for invalid options
while [ $# -gt 0 ]
do
  case $1
  in
    -clusters)
      clusters=1
      shift 1
    ;;

    -infras)
      infras=1
      shift 1
    ;;

    -webapps)
      webapps=1
      shift 1
    ;;

    -cluster-id)
      cluster_id=$2
      shift 2
    ;;

    -ip)
      ip=$2
      shift 2
    ;;

    --help)
      echo "usage get-server-info ip IPADRESS -cluster-id CLUSTERID"
      exit
    ;;

    *)
      echo "Invalid option $1"
      exit 1
  esac
done

if [ $clusters ] ; then
    if [ $infras ] || [ $webapps ] ; then
        echo "Option infras or webapps given with option clusters. Exiting."
        exit 1
    else
        #exit
        result=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select DISTINCT cluster_id from ${server_table}"`

        cluster_ids=`echo $result | cut -f2- -d ' '`

        echo "-----------"
        echo "Clusters   "
        echo "-----------"
        for cluster_id in $cluster_ids
            do
                
                result1=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select server_ip from ${server_table} where server_type='infra' and cluster_id='${cluster_id}'"`

                infra_ip=`echo $result1 | awk -F ' ' '{print $2}'`

                result2=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select COUNT(id) from ${server_table} where server_type='webapp' and cluster_id='${cluster_id}'"`
                num_webapps=`echo $result2 | awk -F ' ' '{print $2}'`
                
                echo "Cluster ${cluster_id} - Infra IP ${infra_ip} - Webapps ${num_webapps}"
            done
    fi
fi

if [ $infras ] ; then
    if [ $clusters ] || [ $webapps ] ; then
        echo "Option clusters or webapps given with option infras. Exiting."
        exit 1
    else

    *)
      echo "Invalid option $1"
      exit 1
  esac
done

if [ $clusters ] ; then
    if [ $infras ] || [ $webapps ] ; then
        echo "Option infras or webapps given with option clusters. Exiting."
        exit 1
    else
        #exit
        result=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select DISTINCT cluster_id from ${server_table}"`

        cluster_ids=`echo $result | cut -f2- -d ' '`

        echo "-----------"
        echo "Clusters   "
        echo "-----------"
        for cluster_id in $cluster_ids
            do
                
                result1=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select server_ip from ${server_table} where server_type='infra' and cluster_id='${cluster_id}'"`

                infra_ip=`echo $result1 | awk -F ' ' '{print $2}'`

                result2=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select COUNT(id) from ${server_table} where server_type='webapp' and cluster_id='${cluster_id}'"`
                num_webapps=`echo $result2 | awk -F ' ' '{print $2}'`
                
                echo "Cluster ${cluster_id} - Infra IP ${infra_ip} - Webapps ${num_webapps}"
            done
    fi
fi

if [ $infras ] ; then
    if [ $clusters ] || [ $webapps ] ; then
        echo "Option clusters or webapps given with option infras. Exiting."
        exit 1
    else
        exit
        #result=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select cluster_id from ${server_table} where cluster_id = '${cluster}' and server_type = 'infra'"`
    fi
fi

if [ $webapps ] ; then
    if [ $clusters ] || [ $infras ] ; then
        echo "Option clusters or infras given with option webapps. Exiting."
        exit 1
    else
        exit
        #result=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select cluster_id from ${server_table} where cluster_id = '${cluster}' and server_type = 'infra'"`
    fi
fi

if [ $cluster_id ] ; then
    result=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select server_ip from ${server_table} where cluster_id = '${cluster_id}' and server_type='infra'"`
    infra_ip=`echo $result | awk -F ' ' '{print $2}'`
    echo "Infra IP - ${infra_ip}"

    echo "-------------------------"
    echo "         Webapps         "
    echo "-------------------------"

    result1=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select server_ip from ${server_table} where cluster_id = '${cluster_id}' and server_type='webapp'"`
    
    webapp_ips=`echo $result1 | cut -f2- -d ' '`

    for webapp_ip in $webapp_ips
        do
            echo "${webapp_ip}"
        done
fi

if [ $ip ] ; then
    result=`mysql -u ${dbuser} --password=${dbpasswd} -D ${dbname} -e "select server_type, cluster_id from ${server_table} where server_ip='${ip}'"`
    server_type=`echo $result | awk -F ' ' '{print $3}'`
    
    if [ ! ${server_type} ] ; then
        echo "No server with given ip. Exiting."
        exit
    fi

    cluster_group=`echo $result | awk -F ' ' '{print $4}'`

    if !(check_server_status $ip) ; then
        server_status="DOWN"
    else
        server_status="UP"
    fi

    echo "Server type - ${server_type}"
    echo "Cluster group - ${cluster_group}"
    echo "Server status - ${server_status}"
fi
