#!/bin/bash

# Cronus is a Multi-Tenant virtualized PaaS solution developed by 
# Thinkcube Systems (Pvt) Ltd. Copyright (C) 2011 Thinkcube Systems (Pvt) Ltd.
#
# This file is part of Cronus.
#
# Cronus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3  
# as published by the Free Software Foundation.
#
# Cronus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Cronus. If not; see <http://www.gnu.org/licenses/>.

# Run this script as root or with sudo

DESCRIPTS=`dirname $0`

available_site_path='/etc/apache2/sites-available'
default_docroot='/var/www/cronus-infra'
http_tmpl='../conf/cronus_infra'
https_tmpl='../conf/cronus_infra-ssl'
http_site='00000-cronus_infra'
https_site='00000-cronus_infra-ssl'
https_conf=${available_site_path}/${https_site}
http_conf=${available_site_path}/${http_site}

echo "Creating ${https_conf}"
cp ${https_tmpl} ${https_conf}
echo "Creating ${http_conf}"
cp ${http_tmpl} ${http_conf}
echo "Enabling ${https_conf}"
a2ensite 00000-cronus_infra-ssl
echo "Enabling ${http_conf}"
a2ensite 00000-cronus_infra
echo "Enabling Apache2 modules: SSL, Rewrite, Headers"
a2enmod ssl rewrite headers

function prompt_reinstall(){
    echo "Cronus already installed at /opt/cronus. Reinstall?(yes|no)"
    read answer
    case $answer
    in
        yes)
        return 0
        ;;
        y)
        return 0
        ;;
        no)
        return 1
        ;;
        n)
        return 1
        ;;
        *)
        prompt_reinstall
    esac
}

# If cronus is already installed; prompt for re-install
if [ -d /opt/cronus/ ] ; then
    if !(prompt_reinstall); then
        exit 0
    fi
fi

echo "Creating directory /opt/cronus"
echo "Copying required scripts to /opt/cronus/shell"
if [ ! -d /opt/cronus/shell ] ; then
    mkdir -p /opt/cronus/shell
fi

cd ../shell
cp -r * /opt/cronus/shell


echo "Enter document root of your webserver"
read doc_root

echo "Copying REST api to ${doc_root}/api"
if [ ! -d ${default_docroot}/api ] ; then
    mkdir ${doc_root}/api
    sed -e "s:$default_docroot:$doc_root:g" ${http_tmpl} > ${http_conf}
    sed -e "s:$default_docroot:$doc_root:g" ${https_tmpl} > ${https_conf}
fi

cd ../../
cp -r api ${doc_root}

cd infra/rest
cp -r proxy ${doc_root}/api/

echo "Proxy Server successfully installed"

echo "Reloading Apache2 configuration"
/etc/init.d/apache2 reload
